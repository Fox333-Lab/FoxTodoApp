{"version":3,"sources":["fire.js","todocomponents/todolist.js","context.js","todocomponents/addtodo.js","userauthcomponent/userlogin.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","TodoList","useState","tlist","setTlist","useEffect","unsubscribe","firestore","collection","onSnapshot","snapshot","console","log","docs","map","doc","data","getAllTodos","className","Object","keys","k","key","icon","status","role","style","cursor","onClick","id","cstat","update","then","catch","err","description","type","delete","aria-hidden","title","Context","React","createContext","UserProvider","props","isAuth","setAuth","auth","onAuthStateChanged","user","Provider","value","children","AddTodo","todo","setTodo","recordCount","setRecordCount","pending","setPending","useContext","length","where","get","qs","size","todoCounter","autoComplete","onSubmit","e","preventDefault","alert","Date","now","toString","set","placeholder","aria-label","onChange","target","name","boxShadow","signOut","to","UserLogin","email","password","values","setValues","onInputChange","marginTop","spin","signInWithEmailAndPassword","library","add","faCheckCircle","faQuestionCircle","faEnvelope","faLock","faSpinner","faSignOutAlt","App","basename","process","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4fdaef63.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyARYMfkZMaBzKxUf0-PUvTXkFwKYrkX8ro\",\r\n  authDomain: \"react-firebase-practice-31c7c.firebaseapp.com\",\r\n  databaseURL: \"https://react-firebase-practice-31c7c.firebaseio.com\",\r\n  projectId: \"react-firebase-practice-31c7c\",\r\n  storageBucket: \"react-firebase-practice-31c7c.appspot.com\",\r\n  messagingSenderId: \"230462173025\",\r\n  appId: \"1:230462173025:web:691d3ebb6afaf7a3091f20\",\r\n  measurementId: \"G-126MXFTN4W\",\r\n};\r\n\r\nvar fire = firebase.initializeApp(firebaseConfig);\r\nexport default fire;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport fire from \"../fire\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst TodoList = () => {\r\n  const [tlist, setTlist] = useState({});\r\n  const getAllTodos = () => {\r\n    /* get data once - starts */\r\n    /*fire\r\n      .firestore()\r\n      .collection(\"todolist\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        setTlist({\r\n          ...snapshot.docs.map((doc) => doc.data()),\r\n        });\r\n        console.log(\"firestore : \" + snapshot.docs.map((doc) => doc.data()));\r\n      });*/\r\n    /* get data once - ends */\r\n    const unsubscribe = fire\r\n      .firestore()\r\n      .collection(\"todolist\")\r\n      .onSnapshot((snapshot) => {\r\n        console.log(\r\n          \"Current data: \",\r\n          snapshot.docs.map((doc) => doc.data())\r\n        );\r\n        setTlist({\r\n          ...snapshot.docs.map((doc) => doc.data()),\r\n        });\r\n      });\r\n\r\n    return () => unsubscribe();\r\n  };\r\n  const deleteHandler = (doc) => {\r\n    doc = \"item_\" + doc;\r\n    fire\r\n      .firestore()\r\n      .collection(\"todolist\")\r\n      .doc(doc)\r\n      .delete()\r\n      .then(() => {\r\n        console.log(`deleted ${doc} successfully`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"delete error : \" + err);\r\n      });\r\n    console.log(doc);\r\n  };\r\n  const changeStatus = (id, cstat) => {\r\n    console.log(\"set id : \", id);\r\n    console.log(\"set id : \", cstat);\r\n\r\n    fire\r\n      .firestore()\r\n      .collection(\"todolist\")\r\n      .doc(`item_${id}`)\r\n      .update({\r\n        status: !cstat,\r\n      })\r\n      .then(() => {\r\n        console.log(\"status changed\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"set error : \", err);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getAllTodos();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/* <div className=\"pt-5 pb-3\"> */}\r\n      <ul className=\"list-group list-group-flush mt-3 p-3\">\r\n        {Object.keys(tlist).map((k) => {\r\n          return (\r\n            <li\r\n              className=\"list-group-item\"\r\n              // style={{\r\n              //   backgroundColor:\r\n              //     tlist[k].status === false ? \"#ffcccc\" : \"#b3ffb3\",\r\n              // }}\r\n              key={k}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={\r\n                  tlist[k].status === false ? \"question-circle\" : \"check-circle\"\r\n                }\r\n                className={\r\n                  tlist[k].status === false ? \"text-danger\" : \"text-success\"\r\n                }\r\n              />\r\n              <span\r\n                role=\"button\"\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"d-inline-block ml-2\"\r\n                onClick={() => changeStatus(tlist[k].id, tlist[k].status)}\r\n              >\r\n                {tlist[k].description}\r\n              </span>\r\n\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                onClick={() => deleteHandler(tlist[k].id)}\r\n              >\r\n                <span aria-hidden=\"true\" title=\"delete\">\r\n                  &times;\r\n                </span>\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport fire from \"./fire\";\r\n\r\nexport const Context = React.createContext();\r\n\r\n// const UserProvider = UserContext.Provider;\r\n// const UserConsumer = UserContext.Co\r\n\r\nexport const UserProvider = (props) => {\r\n  const [isAuth, setAuth] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        console.log(\"context true : \" + user);\r\n        setAuth(\"true\");\r\n      } else {\r\n        console.log(\"context false : \" + user);\r\n        setAuth(\"false\");\r\n      }\r\n    });\r\n  }, [isAuth, setAuth]);\r\n\r\n  return (\r\n    <Context.Provider value={[isAuth, setAuth]}>\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport fire from \"../fire\";\r\nimport TodoList from \"./todolist\";\r\nimport { Context } from \"../context\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst AddTodo = () => {\r\n  var [todo, setTodo] = useState(\"\");\r\n  var [recordCount, setRecordCount] = useState(0);\r\n  var [pending, setPending] = useState(0);\r\n  const [isAuth, setAuth] = useContext(Context);\r\n\r\n  const todoCounter = () => {\r\n    // const unsubscribe = fire\r\n    //   .firestore()\r\n    //   .collection(\"todolist\")\r\n    //   .onSnapshot((snapshot) => {\r\n    //     console.log(\"Current records: \", snapshot.docs.length);\r\n    //     setRecordCount(snapshot.docs.length);\r\n    //     setPending({\r\n    //       ...snapshot.docs.map((doc) => doc.data()),\r\n    //     });\r\n    //     console.log(\"snaps : \" + pending);\r\n    //   });\r\n\r\n    const unsubscribe = fire\r\n      .firestore()\r\n      .collection(\"todolist\")\r\n      .onSnapshot((snapshot) => {\r\n        console.log(\r\n          \"Current data 1: \",\r\n          snapshot.docs.map((doc) => doc.data())\r\n        );\r\n        setRecordCount(snapshot.docs.length);\r\n        fire\r\n          .firestore()\r\n          .collection(\"todolist\")\r\n          .where(\"status\", \"==\", false)\r\n          .get()\r\n          .then((qs) => {\r\n            console.log(\"snaps 1 : \", qs.size);\r\n            setPending(qs.size);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"err snaps : \" + err);\r\n          });\r\n        console.log(\"snaps : \");\r\n      });\r\n\r\n    return () => unsubscribe();\r\n  };\r\n  const addTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    if (todo === \"\") {\r\n      alert(\"enter a todo to add\");\r\n    } else {\r\n      fire\r\n        .firestore()\r\n        .collection(\"todolist\")\r\n        .doc(`item_${Date.now().toString()}`)\r\n        .set({\r\n          id: Date.now().toString(),\r\n          description: todo,\r\n          status: false,\r\n        })\r\n        .then(() => {\r\n          console.log(\"todo added success\");\r\n          setTodo(\"\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"failed todo addition\");\r\n        });\r\n      console.log(\"date : \" + Date.now().toString());\r\n    }\r\n  };\r\n  const inputChangeHandler = (e) => {\r\n    setTodo(e.target.value);\r\n    //console.log(todo);\r\n  };\r\n  const onSignOut = () => {\r\n    fire.auth().signOut();\r\n  };\r\n  useEffect(() => {\r\n    if (isAuth === \"true\") {\r\n      todoCounter();\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      {isAuth === \"\" ? (\r\n        \"\"\r\n      ) : isAuth === \"true\" ? (\r\n        <div className=\"card col-md-4 offset-md-4 mt-5 p-0\">\r\n          <div className=\"card-header text-center\">Todo App</div>\r\n          <form\r\n            autoComplete=\"off\"\r\n            className=\"pt-5 pl-3 pr-3\"\r\n            onSubmit={addTodoHandler}\r\n          >\r\n            <div className=\"input-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"todo...\"\r\n                aria-label=\"todo\"\r\n                onChange={inputChangeHandler}\r\n                name=\"todo\"\r\n                value={todo}\r\n                style={{ boxShadow: \"none\" }}\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <button\r\n                  className=\"btn btn-outline-success\"\r\n                  style={{ boxShadow: \"none\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <div className=\"row mt-2 pb-3\">\r\n            <span className=\"col\">Total Todos : {recordCount}</span>\r\n            <span className=\"col\"> Pending : {pending}</span>\r\n          </div> */}\r\n          </form>\r\n          <TodoList />\r\n          <div className=\"card-footer mt-2\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-5\">Total Todos : {recordCount}</div>\r\n              <div className=\"col-md-5\">Pending : {pending}</div>\r\n              <div className=\"col-md-2\">\r\n                <div\r\n                  className=\"d-block h-100 text-center\"\r\n                  title=\"logout\"\r\n                  role=\"button\"\r\n                  onClick={onSignOut}\r\n                >\r\n                  <FontAwesomeIcon icon=\"sign-out-alt\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport fire from \"../fire\";\r\nimport { Context } from \"../context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useContext } from \"react\";\r\n\r\nconst UserLogin = () => {\r\n  const authValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const [isAuth, setAuth] = useContext(Context);\r\n  var [values, setValues] = useState(authValues);\r\n  const onInputChange = (e) => {\r\n    var { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const onLogin = (e) => {\r\n    e.preventDefault();\r\n    if (values.email !== \"\" && values.password !== \"\") {\r\n      fire\r\n        .auth()\r\n        .signInWithEmailAndPassword(values.email, values.password)\r\n        .then((user) => {\r\n          if (user) {\r\n            console.log(\"login success\");\r\n            setAuth(\"true\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"login err : \", err);\r\n          setAuth(\"false\");\r\n        });\r\n      console.log(values);\r\n    }\r\n  };\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <>\r\n      {isAuth === \"\" ? (\r\n        <div\r\n          className=\"col-md-1 text-center text-muted offset-md-5\"\r\n          style={{ marginTop: \"100px\" }}\r\n        >\r\n          <FontAwesomeIcon icon=\"spinner\" spin size=\"2x\" />\r\n        </div>\r\n      ) : isAuth === \"false\" ? (\r\n        <div className=\"col-md-5 offset-md-3\">\r\n          <form autoComplete=\"off\" onSubmit={onLogin}>\r\n            <div className=\"form-group input-group mt-5\">\r\n              <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">\r\n                  <FontAwesomeIcon icon=\"envelope\" />\r\n                </div>\r\n              </div>\r\n              <input\r\n                placeholder=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                onChange={onInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group input-group mt-1\">\r\n              <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">\r\n                  <FontAwesomeIcon icon=\"lock\" />\r\n                </div>\r\n              </div>\r\n              <input\r\n                placeholder=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                onChange={onInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button type=\"submit\" className=\"form-control btn btn-primary\">\r\n                Login\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <Redirect to=\"/todo\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport AddTodo from \"./todocomponents/addtodo\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faCheckCircle,\n  faQuestionCircle,\n  faEnvelope,\n  faLock,\n  faSpinner,\n  faSignOutAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport UserLogin from \"./userauthcomponent/userlogin\";\nimport { UserProvider } from \"./context\";\n\nlibrary.add(\n  faCheckCircle,\n  faQuestionCircle,\n  faEnvelope,\n  faLock,\n  faSpinner,\n  faSignOutAlt\n);\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <UserProvider>\n        <div className=\"App\">\n          <div className=\"container pt-5\">\n            <Switch>\n              <Route path=\"/\" exact component={UserLogin} />\n              <Route path=\"/todo\" component={AddTodo} />\n            </Switch>\n          </div>\n        </div>\n      </UserProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}